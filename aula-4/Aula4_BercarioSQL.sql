-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.uf
(
    id smallserial NOT NULL,
    nome character varying(40) NOT NULL,
    sigla character(2) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT uk_nome UNIQUE (nome),
    CONSTRAINT uk_sigla UNIQUE (sigla)
);

CREATE TABLE IF NOT EXISTS public.especialidade
(
    id smallserial NOT NULL,
    descricao character varying(45),
    PRIMARY KEY (id),
    CONSTRAINT uk_descricao UNIQUE (descricao)
);

CREATE TABLE IF NOT EXISTS public.medico_telefone
(
    id serial,
    telefone character(11),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.mae_telefone
(
    id serial,
    telefone character(11),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.municipio
(
    id smallserial,
    nome character varying(100) NOT NULL,
    uf_id smallint NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT uk_nome_uf_id UNIQUE (nome, uf_id)
);

CREATE TABLE IF NOT EXISTS public.bairro
(
    id bigserial,
    nome character varying(100) NOT NULL,
    municipio_id smallint NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.medico
(
    id smallserial NOT NULL,
    nome character varying(100) NOT NULL,
    crm_numero character varying(15) NOT NULL,
    crm_uf_id smallint NOT NULL,
    logradouro character varying(40),
    numero character varying(8),
    complemento character varying(25),
    cep integer,
    bairro_id integer,
    PRIMARY KEY (id),
    CONSTRAINT uk_crm_uf_id UNIQUE (crm_numero, crm_uf_id)
);

CREATE TABLE IF NOT EXISTS public.medico_especialidade
(
    medico_id smallint,
    especialidade_id smallint,
    PRIMARY KEY (medico_id, especialidade_id)
);

CREATE TABLE IF NOT EXISTS public.medico_medico_telefone
(
    medico_id smallint,
    medico_telefone_id integer,
    PRIMARY KEY (medico_id, medico_telefone_id)
);

ALTER TABLE IF EXISTS public.municipio
    ADD CONSTRAINT fk_uf_id FOREIGN KEY (uf_id)
    REFERENCES public.uf (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.bairro
    ADD CONSTRAINT fk_municipio_id FOREIGN KEY (municipio_id)
    REFERENCES public.municipio (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medico
    ADD CONSTRAINT fk_bairro_id FOREIGN KEY (bairro_id)
    REFERENCES public.bairro (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medico
    ADD CONSTRAINT fk_crm_uf_id FOREIGN KEY (crm_uf_id)
    REFERENCES public.uf (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medico_especialidade
    ADD CONSTRAINT fk_medico_id FOREIGN KEY (medico_id)
    REFERENCES public.medico (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medico_especialidade
    ADD CONSTRAINT fk_especialidade_id FOREIGN KEY (especialidade_id)
    REFERENCES public.especialidade (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medico_medico_telefone
    ADD CONSTRAINT fk_medico_id FOREIGN KEY (medico_id)
    REFERENCES public.medico (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medico_medico_telefone
    ADD CONSTRAINT fk_medico_telefone_id FOREIGN KEY (medico_telefone_id)
    REFERENCES public.medico_telefone (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;